DUNFIELD 8051 ASSEMBLER: Q1                                           PAGE: 1

0000                         1  	ORG $0000		Program starts at address 0000h
0000  78 00                  2  BEGIN:	MOV R0,#0h		Initialize counter for Quotient
0002  7A 03                  3  	MOV R2,#03h		Initialize counter for multiplication
0004  C5 F0                  4  	XCH A,B			Exchange contents of A and B for Divide by zero check
0006  B4 00 0E               5  	CJNE A,#0h,L0		If divisor is zero, write error code and end program
0009  75 30 01               6  	MOV 30h,#01h		Write error code 0h for divide by zero at IRAM location 30h
000C  75 20 00               7  	MOV 20h,#0h		Clear internal RAM locations 20h,21h,22h - quotient,remainder,result
000F  75 21 00               8  	MOV 21h,#0h
0012  75 22 00               9  	MOV 22h,#0h
0015  80 21                 10  	SJMP END
0017  C5 F0                 11  L0:	XCH A,B			If divisor is non-zero, swap contents of A,B		
0019  95 F0                 12  PROC:	SUBB A,B		Code for division X/Y, Dividend in A;divisor in B
001B  40 04                 13  	JC L1			Loop to subract till dividend >= divisor
001D  08                    14  	INC R0			Store quotient in R0
001E  FB                    15  	MOV R3,A		Move remainder to R3	
001F  70 F8                 16  	JNZ PROC			
0021  88 20                 17  L1:	MOV 20h,R0		Move quotient to address 20h		
0023  8B 21                 18  	MOV 21h,R3		Move remainder to address 21h
0025  E8                    19  	MOV A,R0
0026  C3                    20  	CLR C			Code for multiplication by 8	
0027  33                    21  L2:	RLC A			Rotate left by 1 bit, results in multiplication by 2	
0028  50 07                 22  	JNC L3			If multiplication exceeds 8-bit value
002A  75 30 02              23  	MOV 30h,#02h		Write error code 02h for overflow 
002D  F5 22                 24  	MOV 22h,A		Store LSB of the result at location 22h 
002F  80 07                 25  	SJMP END		End progam
0031  DA F4                 26  L3:	DJNZ R2,L2		Loop for multiplication by 8
0033  F5 22                 27  	MOV 22h,A		Store the final result at 22h
0035  75 30 00              28  	MOV 30h,#0h		Write Code 00h for no errors at 30h
0038  80 C6                 29  END	SJMP BEGIN		Enter an infinite loop of execution
003A                        30  	
003A                        31  	
